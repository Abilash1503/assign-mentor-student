{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\ADMIN\\\\Downloads\\\\assign-mentor-main\\\\assign-mentor-main\\\\frontEnd\\\\src\\\\Students.js\";\nimport React from \"react\";\nimport axios from \"axios\";\nimport { Table, Button } from \"react-bootstrap\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst API_URL = \"https://assign-stdent-mentor.herokuapp.com/students\";\nconst API_URL1 = \"https://assign-stdent-mentor.herokuapp.com/mentors\";\nconst API_URL2 = \"https://assign-stdent-mentor.herokuapp.com/student\";\n\nclass Students extends React.Component {\n  constructor() {\n    super();\n\n    this.componentDidMount = () => {\n      this.getStudents();\n      this.getMentors();\n    };\n\n    this.getStudents = async () => {\n      // API Call to server and get all rooms\n      try {\n        const {\n          data\n        } = await axios.get(API_URL);\n        let visibility = new Array(data.length).fill(0);\n        this.setState({\n          students: data\n        });\n      } catch (err) {\n        console.error(err);\n      }\n    };\n\n    this.getMentors = async () => {\n      // API Call to server and get all rooms\n      try {\n        const {\n          data\n        } = await axios.get(API_URL1);\n        this.setState({\n          mentors: data\n        });\n      } catch (err) {\n        console.error(err);\n      }\n    };\n\n    this.viewMentors = studentId => {\n      let visibility = { ...this.state.visibility\n      };\n      visibility[studentId] = !visibility[studentId];\n      this.setState({\n        visibility\n      });\n    };\n\n    this.assignMentor = (studentId, mentor) => {\n      var config = {\n        method: \"put\",\n        url: `${API_URL2}/${studentId}`,\n        headers: {\n          \"Content-Type\": \"application/json\"\n        },\n        data: JSON.stringify({\n          mentor: mentor.name\n        })\n      };\n      axios(config).then(response => {\n        console.log(JSON.stringify(response.data));\n\n        if (!response.data.error) {\n          this.viewMentors(studentId);\n          this.getStudents();\n        } else alert(response.data.error);\n      }).catch(function (error) {\n        console.log(error);\n      });\n    };\n\n    this.viewToggle = () => {\n      this.setState({\n        view: !this.state.view\n      });\n    };\n\n    this.state = {\n      students: [],\n      visibility: [],\n      view: false,\n      mentors: []\n    };\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [\" \", /*#__PURE__*/_jsxDEV(\"h4\", {\n        style: {\n          textAlign: \"center\"\n        },\n        children: \"Students\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 9\n      }, this), \" \", /*#__PURE__*/_jsxDEV(Table, {\n        striped: true,\n        bordered: true,\n        hover: true,\n        className: \"table \",\n        responsive: true,\n        children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n          children: /*#__PURE__*/_jsxDEV(\"tr\", {\n            children: [/*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"#\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 88,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Name\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 89,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Mentor\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 90,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Change Mentor\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 91,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 87,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 86,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n          children: this.state.students.map(s => {\n            return /*#__PURE__*/_jsxDEV(_Fragment, {\n              children: [/*#__PURE__*/_jsxDEV(\"tr\", {\n                children: [/*#__PURE__*/_jsxDEV(\"td\", {\n                  children: s.id\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 99,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                  children: s.name\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 100,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                  children: s.mentor ? s.mentor : \"-\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 101,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                  children: /*#__PURE__*/_jsxDEV(Button, {\n                    onClick: () => {\n                      this.viewMentors(s.id);\n                    },\n                    children: \"Mentors\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 104,\n                    columnNumber: 23\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 103,\n                  columnNumber: 21\n                }, this)]\n              }, s.id, true, {\n                fileName: _jsxFileName,\n                lineNumber: 98,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 113,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 114,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 115,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                children: this.state.visibility[s.id] ? /*#__PURE__*/_jsxDEV(\"p\", {\n                  children: this.state.mentors.map(m => {\n                    return /*#__PURE__*/_jsxDEV(Button, {\n                      className: \"studentButton\",\n                      onClick: () => {\n                        this.assignMentor(s.id, m);\n                      },\n                      children: m.name\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 121,\n                      columnNumber: 29\n                    }, this);\n                  })\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 118,\n                  columnNumber: 23\n                }, this) : null\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 116,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true);\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 94,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true);\n  }\n\n}\n\nexport default Students;","map":{"version":3,"sources":["C:/Users/ADMIN/Downloads/assign-mentor-main/assign-mentor-main/frontEnd/src/Students.js"],"names":["React","axios","Table","Button","API_URL","API_URL1","API_URL2","Students","Component","constructor","componentDidMount","getStudents","getMentors","data","get","visibility","Array","length","fill","setState","students","err","console","error","mentors","viewMentors","studentId","state","assignMentor","mentor","config","method","url","headers","JSON","stringify","name","then","response","log","alert","catch","viewToggle","view","render","textAlign","map","s","id","m"],"mappings":"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","sourcesContent":["import React from \"react\";\r\nimport axios from \"axios\";\r\nimport { Table, Button } from \"react-bootstrap\";\r\n\r\nconst API_URL = \"https://assign-stdent-mentor.herokuapp.com/students\";\r\nconst API_URL1 = \"https://assign-stdent-mentor.herokuapp.com/mentors\";\r\nconst API_URL2 = \"https://assign-stdent-mentor.herokuapp.com/student\";\r\n\r\nclass Students extends React.Component {\r\n  constructor() {\r\n    super();\r\n    this.state = {\r\n      students: [],\r\n      visibility: [],\r\n      view: false,\r\n      mentors: [],\r\n    };\r\n  }\r\n\r\n  componentDidMount = () => {\r\n    this.getStudents();\r\n    this.getMentors();\r\n  };\r\n\r\n  getStudents = async () => {\r\n    // API Call to server and get all rooms\r\n    try {\r\n      const { data } = await axios.get(API_URL);\r\n      let visibility = new Array(data.length).fill(0);\r\n      this.setState({ students: data });\r\n    } catch (err) {\r\n      console.error(err);\r\n    }\r\n  };\r\n  getMentors = async () => {\r\n    // API Call to server and get all rooms\r\n    try {\r\n      const { data } = await axios.get(API_URL1);\r\n      this.setState({ mentors: data });\r\n    } catch (err) {\r\n      console.error(err);\r\n    }\r\n  };\r\n\r\n  viewMentors = (studentId) => {\r\n    let visibility = { ...this.state.visibility };\r\n    visibility[studentId] = !visibility[studentId];\r\n    this.setState({ visibility });\r\n  };\r\n\r\n  assignMentor = (studentId, mentor) => {\r\n    var config = {\r\n      method: \"put\",\r\n      url: `${API_URL2}/${studentId}`,\r\n      headers: {\r\n        \"Content-Type\": \"application/json\",\r\n      },\r\n      data: JSON.stringify({\r\n        mentor: mentor.name,\r\n      }),\r\n    };\r\n\r\n    axios(config)\r\n      .then((response) => {\r\n        console.log(JSON.stringify(response.data));\r\n        if (!response.data.error) {\r\n          this.viewMentors(studentId);\r\n          this.getStudents();\r\n        } else alert(response.data.error);\r\n      })\r\n      .catch(function (error) {\r\n        console.log(error);\r\n      });\r\n  };\r\n\r\n  viewToggle = () => {\r\n    this.setState({ view: !this.state.view });\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <>\r\n        {\" \"}\r\n        <h4 style={{ textAlign: \"center\" }}>Students</h4>{\" \"}\r\n        <Table striped bordered hover className=\"table \" responsive>\r\n          <thead>\r\n            <tr>\r\n              <th>#</th>\r\n              <th>Name</th>\r\n              <th>Mentor</th>\r\n              <th>Change Mentor</th>\r\n            </tr>\r\n          </thead>\r\n          <tbody>\r\n            {this.state.students.map((s) => {\r\n              return (\r\n                <>\r\n                  <tr key={s.id}>\r\n                    <td>{s.id}</td>\r\n                    <td>{s.name}</td>\r\n                    <td>{s.mentor ? s.mentor : \"-\"}</td>\r\n\r\n                    <td>\r\n                      <Button\r\n                        onClick={() => {\r\n                          this.viewMentors(s.id);\r\n                        }}\r\n                      >\r\n                        Mentors\r\n                      </Button>\r\n                    </td>\r\n                  </tr>\r\n                  <td></td>\r\n                  <td></td>\r\n                  <td></td>\r\n                  <p>\r\n                    {this.state.visibility[s.id] ? (\r\n                      <p>\r\n                        {this.state.mentors.map((m) => {\r\n                          return (\r\n                            <Button\r\n                              className=\"studentButton\"\r\n                              onClick={() => {\r\n                                this.assignMentor(s.id, m);\r\n                              }}\r\n                            >\r\n                              {m.name}\r\n                            </Button>\r\n                          );\r\n                        })}\r\n                      </p>\r\n                    ) : null}\r\n                  </p>\r\n                </>\r\n              );\r\n            })}\r\n          </tbody>\r\n        </Table>\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Students;\r\n"]},"metadata":{},"sourceType":"module"}